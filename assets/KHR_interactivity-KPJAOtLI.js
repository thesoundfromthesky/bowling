import{F,s as v,t as f,v as y,w as I,x as b,y as g,z as _,B as T,E,H as x,I as $,J as R,K as S,N as q,U as O,W as L,X as P,Y as V,Z as H,$ as K,a0 as A,a1 as D,a2 as M,a3 as U,a4 as z,a5 as j,a6 as J,a7 as W,a8 as Z,a9 as X,aa as Y,ab as Q,ac as aa,ad as sa,ae as oa,af as ea,ag as ta,ah as na,ai as la,aj as ra,ak as ca,al as ia,am as ha,an as ma,ao as pa,ap as ua,aq as wa,ar as da,as as Ca,at as ka,au as Na,av as Ga,aw as Ba,ax as Fa,ay as va,az as fa,aA as ya,aB as Ia,aC as ba,aD as ga,aE as _a,aF as Ta,aG as Ea,aH as xa,aI as $a,aJ as Ra,aK as Sa,aL as qa,aM as Oa,aN as La,aO as Pa,aP as Va,aQ as Ha,aR as Ka,aS as Aa,aT as Da,aU as Ma,aV as Ua,aW as za,aX as ja,aY as Ja,aZ as Wa,a_ as d,a$ as Za,b0 as Xa,u as Ya,r as Qa}from"./index-UsGQmXg2.js";import{G as as}from"./gltfPathToObjectConverter-CGviXP77.js";const ss={"lifecycle/onStart":Wa.ClassName,"lifecycle/onTick":Ja.ClassName,log:ja.ClassName,"flow/delay":za.ClassName,"customEvent/send":Ua.ClassName,"customEvent/receive":Ma.ClassName,"flow/sequence":Da.ClassName,"world/get":Aa.ClassName,"world/set":Ka.ClassName,"flow/doN":Ha.ClassName,"variable/get":Va.ClassName,"variable/set":Pa.ClassName,"flow/whileLoop":La.ClassName,"math/random":Oa.ClassName,"math/e":qa.ClassName,"math/pi":Sa.ClassName,"math/inf":Ra.ClassName,"math/nan":$a.ClassName,"math/abs":xa.ClassName,"math/sign":Ea.ClassName,"math/trunc":Ta.ClassName,"math/floor":_a.ClassName,"math/ceil":ga.ClassName,"math/fract":ba.ClassName,"math/neg":Ia.ClassName,"math/add":ya.ClassName,"math/sub":fa.ClassName,"math/mul":va.ClassName,"math/div":Fa.ClassName,"math/rem":Ba.ClassName,"math/min":Ga.ClassName,"math/max":Na.ClassName,"math/clamp":ka.ClassName,"math/saturate":Ca.ClassName,"math/mix":da.ClassName,"math/eq":wa.ClassName,"math/lt":ua.ClassName,"math/le":pa.ClassName,"math/gt":ma.ClassName,"math/ge":ha.ClassName,"math/isnan":ia.ClassName,"math/isinf":ca.ClassName,"math/rad":ra.ClassName,"math/deg":la.ClassName,"math/sin":na.ClassName,"math/cos":ta.ClassName,"math/tan":ea.ClassName,"math/asin":oa.ClassName,"math/acos":sa.ClassName,"math/atan":aa.ClassName,"math/atan2":Q.ClassName,"math/sinh":Y.ClassName,"math/cosh":X.ClassName,"math/tanh":Z.ClassName,"math/asinh":W.ClassName,"math/acosh":J.ClassName,"math/atanh":j.ClassName,"math/exp":z.ClassName,"math/log":U.ClassName,"math/log2":M.ClassName,"math/log10":D.ClassName,"math/sqrt":A.ClassName,"math/cbrt":K.ClassName,"math/pow":H.ClassName,"math/length":V.ClassName,"math/normalize":P.ClassName,"math/dot":L.ClassName,"math/cross":O.ClassName,"math/rotate2d":q.ClassName,"math/rotate3d":S.ClassName,"math/transpose":R.ClassName,"math/determinant":$.ClassName,"math/inverse":x.ClassName,"math/matmul":E.ClassName,"math/not":T.ClassName,"math/and":_.ClassName,"math/or":g.ClassName,"math/xor":b.ClassName,"math/asr":I.ClassName,"math/lsl":y.ClassName,"math/clz":f.ClassName,"math/ctz":v.ClassName,"math/popcnt":F.ClassName},os={float2:"Vector2",float3:"Vector3",float4:"Vector4",float4x4:"Matrix",int:"FlowGraphInteger"};function N(s,o,n){if(s.type!==void 0){const e=o.types&&o.types[s.type];if(!e)throw new Error(`${n}: Unknown type: ${s.type}`);const l=e.signature;if(!l)throw new Error(`${n}: Type ${s.type} has no signature`);const a=os[l];return{value:s.value,className:a}}else return s.value}function es(s,o,n){const e={},l=s.configuration??[];for(const a of l)if(a.id==="customEvent"){const t=o.customEvents&&o.customEvents[a.value];if(!t)throw new Error(`/extensions/KHR_interactivity/nodes/${n}: Unknown custom event: ${a.value}`);e.eventId=t.id,e.eventData=t.values.map(i=>i.id)}else if(a.id==="variable"){const t=o.variables&&o.variables[a.value];if(!t)throw new Error(`/extensions/KHR_interactivity/nodes/${n}: Unknown variable: ${a.value}`);e.variableName=t.id}else if(a.id==="path"){const t=a.value;e.path=t}else e[a.id]=N(a,o,`/extensions/KHR_interactivity/nodes/${n}`);return e}function ts(s,o,n){const e=ss[o.type];if(!e)throw new Error(`/extensions/KHR_interactivity/nodes/${s}: Unknown block type: ${o.type}`);const l=s.toString(),a=es(o,n,l),t=o.metadata;return{className:e,config:a,uniqueId:l,metadata:t,dataInputs:[],dataOutputs:[],signalInputs:[],signalOutputs:[]}}function ns(s){const o={uniqueId:d(),_userVariables:{},_connectionValues:{}},n=[o],e=[];for(let a=0;a<s.nodes.length;a++){const t=s.nodes[a],i=ts(a,t,s);e.push(i)}for(let a=0;a<s.nodes.length;a++){const t=s.nodes[a],i=e[a],G=t.flows??[];for(const r of G){const u=r.id,h={uniqueId:d(),name:u,_connectionType:1,connectedPointIds:[]};i.signalOutputs.push(h);const m=r.node,w=r.socket,p=e[m];if(!p)throw new Error(`/extensions/KHR_interactivity/nodes/${a}: Could not find node with id ${m} that connects its input with with node ${a}'s output ${u}`);let c=p.signalInputs.find(k=>k.name===w);c||(c={uniqueId:d(),name:w,_connectionType:0,connectedPointIds:[]},p.signalInputs.push(c)),c.connectedPointIds.push(h.uniqueId),h.connectedPointIds.push(c.uniqueId)}const B=t.values??[];for(const r of B){const u=r.id,h={uniqueId:d(),name:u,_connectionType:0,connectedPointIds:[]};if(i.dataInputs.push(h),r.value!==void 0){const m=N(r,s,`/extensions/KHR_interactivity/nodes/${a}`);o._connectionValues[h.uniqueId]=m}else if(r.node!==void 0&&r.socket!==void 0){const m=r.node,w=r.socket,p=e[m];if(!p)throw new Error(`/extensions/KHR_interactivity/nodes/${a}: Could not find node with id ${m} that connects its output with node${a}'s input ${u}`);let c=p.dataOutputs.find(k=>k.name===w);c||(c={uniqueId:d(),name:w,_connectionType:1,connectedPointIds:[]},p.dataOutputs.push(c)),h.connectedPointIds.push(c.uniqueId),c.connectedPointIds.push(h.uniqueId)}else throw new Error(`/extensions/KHR_interactivity/nodes/${a}: Invalid socket ${u} in node ${a}`)}}const l=s.variables??[];for(let a=0;a<l.length;a++){const t=l[a],i=t.id;o._userVariables[i]=N(t,s,`/extensions/KHR_interactivity/variables/${a}`)}return{allBlocks:e,executionContexts:n}}class ls extends as{constructor(o){super(o,cs)}}const rs={__array__:{__target__:!0,translation:{type:"Vector3",get:s=>s._babylonTransformNode.position,set:(s,o)=>{const n=o._babylonTransformNode;n.position=s},getObject(s){return s._babylonTransformNode}}}},cs={nodes:rs},C="KHR_interactivity";class is{constructor(o){this._loader=o,this.name=C,this.enabled=this._loader.isExtensionUsed(C),this._pathConverter=new ls(this._loader.gltf)}dispose(){this._loader=null,delete this._pathConverter}onReady(){var a;if(!this._loader.babylonScene||!this._pathConverter)return;const o=this._loader.babylonScene,n=(a=this._loader.gltf.extensions)==null?void 0:a.KHR_interactivity,e=ns(n),l=new Za({scene:o});Xa.Parse(e,{coordinator:l,pathConverter:this._pathConverter}),l.start()}}Ya(C);Qa(C,!0,s=>new is(s));export{is as KHR_interactivity};
